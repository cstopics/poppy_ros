<launch>

    <!-- SIMULATOR -->

    <!-- these are the arguments you can pass this launch file, for example paused:=true -->
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>

    <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="debug" value="$(arg debug)" />
        <arg name="gui" value="$(arg gui)" />
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="$(arg use_sim_time)"/>
        <arg name="headless" value="$(arg headless)"/>
    </include>

    <!-- Load the URDF into the ROS Parameter Server -->
    <param name="robot_description" command="cat $(find poppy_torso_description)/urdf/poppy_torso.urdf" />

    <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-urdf -z 0.0 -model poppy_torso -param robot_description"/>

    <!-- CONTROLLERS -->

    <param name="robot_description" command="cat $(find poppy_torso_description)/urdf/poppy_torso.urdf" />

    <!-- Load joint controller configurations from YAML file to parameter server -->
    <rosparam file="$(find poppy_torso_description)/config/gazebo_control.yaml" command="load"/>

    <!-- load the controllers -->
    <node 
        name="controller_spawner" 
        pkg="controller_manager" 
        type="spawner" 
        respawn="false"
        output="screen"
        ns="/poppy_torso"
        args="	joint_state_controller
                abs_z_position_controller
                bust_y_position_controller
                bust_x_position_controller
                head_z_position_controller
                head_y_position_controller
                l_shoulder_y_position_controller
                l_shoulder_x_position_controller
                l_arm_z_position_controller
                l_elbow_y_position_controller
                r_shoulder_y_position_controller
                r_shoulder_x_position_controller
                r_arm_z_position_controller
                r_elbow_y_position_controller"/>

  <!-- convert joint states to TF transforms for rviz, etc -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
        respawn="false" output="screen">
        <remap from="/joint_states" to="/poppy/joint_states" />
    </node>

</launch>